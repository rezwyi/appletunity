- content_for :head do
  javascript:
    $(document).ready(function(){
      var redactor_buttons = [
        'formatting', '|', 'bold', 'italic', 'deleted', '|', 'unorderedlist','orderedlist'
      ];

      $('#vacancy_body').redactor({
        lang: '#{I18n.locale}',
        buttons: redactor_buttons,
        autoresize: false
      });
    });

= form_for vacancy, remote: true, authenticity_token: true, html: {class: 'form-inline', novalidate: true, data: {type: :json}} do |f|
  = render partial: 'shared/honeypot_captcha'
  
  fieldset
    h2 = t('ui.vacancies.text.what_you_want')
    hr
    .control-group class=('error' if vacancy.errors[:title].present?)
      = f.label :title, class: 'control-label'
      span.required &nbsp;&#42;
      .controls
        = f.text_field :title, class: 'span5', placeholder: t('ui.vacancies.placeholders.title'), disabled: vacancy.persisted?
    
    .control-group
      = f.label :location, class: 'control-label'
      .controls
        = f.text_field :location, class: 'span5', placeholder: t('ui.vacancies.placeholders.location')

    .control-group class=('error' if vacancy.errors[:body].present?)
      = f.label :body, class: 'control-label'
      span.required &nbsp;&#42;
      = f.text_area :body, class: 'span5', rows: 15, placeholder: t('ui.vacancies.placeholders.body')
    
    .control-group
      = f.label :occupations, class: 'control-label'
      .controls
        = f.fields_for :vacancies_occupations, setup_vacancies_occupations_for(vacancy) do |ff|
          label.inline.checkbox
            = ff.hidden_field :occupation_id
            = ff.check_box :_destroy, {checked: ff.object.persisted?}, '0', '1'
            = ff.label :_destroy, ff.object.occupation.name
    
    .clearfix

    h2 = t('ui.vacancies.text.about_your_company')
    hr
    .control-group class=('error' if vacancy.errors[:company_name].present?)
      = f.label :company_name, class: 'control-label'
      span.required &nbsp;&#42;
      .controls
        = f.text_field :company_name, class: 'span5'
    
    .control-group
      = f.label :company_website, class: 'control-label'
      .controls
        = f.text_field :company_website, class: 'span5', placeholder: 'http://'
    
    .control-group
      = f.label :logo, class: 'control-label'
      .controls
        = logo_for vacancy, :medium, class: 'well'
      .controls
        = f.file_field :logo, class: 'span5'

    .clearfix

    h2 = t('ui.vacancies.text.contacts')
    hr
    .control-group class=('error' if vacancy.errors[:contact_email].present?)
      = f.label :contact_email, class: 'control-label'
      span.required &nbsp;&#42;
      .controls
        = f.text_field :contact_email, class: 'span5'
    
    .control-group
      = f.label :contact_phone, class: 'control-label'
      .controls
        = f.text_field :contact_phone, class: 'span5'

    .clearfix

    .form-actions
      .control-group
        label.checkbox.inline.terms.fullwidth
          = f.check_box :agreed_to_offer, value: vacancy.persisted? ? '1' : '0', disabled: vacancy.persisted?
          = t('ui.vacancies.text.i_agree')
          | &nbsp;
          = link_to t('ui.vacancies.text.terms'), static_path('terms'), target: '_blank'
          span.required &nbsp;&#42;
      
      div
        = f.submit t("ui.vacancies.buttons.#{vacancy.persisted? ? 'save' : 'add'}"), class: 'zurb-btn'
        | &nbsp;
        = link_to t('ui.links.cancel'), root_path